{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactsList/ContactsList.module.css","redux/phonebook/phonebook-actions.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","getItems","useSelector","state","contacts","items","dispatch","useDispatch","useState","setName","setNumber","reset","className","s","form","onSubmit","e","preventDefault","normolizedName","toLowerCase","find","item","alert","form__label","form__input","value","type","pattern","title","required","onChange","currentTarget","form__button","ContactsItem","onDeleteContact","text","button","onClick","ContactsList","filter","normalizedFilter","includes","contacts__list","map","Filter","filter__label","filter__input","event","target","placeholder","App","container","createReducer","_","combineReducers","persistConfig","key","storage","rootReduser","persistReducer","phonebookReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d926a191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__1ELqS\",\"text\":\"ContactsItem_text__2vPyo\",\"button\":\"ContactsItem_button__VtTOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__2ezDc\",\"filter__input\":\"Filter_filter__input__1PgK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Ji48o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__3xjwh\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import types from \"./phonebook-types\";\r\n\r\nexport const addContact = createAction('contact/Add', ({name, number}) => ({    \r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    }\r\n}));\r\n\r\nexport const deleteContact = createAction('contact/Delete');\r\nexport const changeFilter = createAction('contact/cgangeFilter');\r\n\r\n// const addContact = ({name, number}) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: uuidv4(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// });\r\n\r\n// export default { addContact, deleteContact, changeFilter };","import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport {addContact} from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Form.module.css'\r\n\r\nexport default function Form() {\r\n  const getItems = useSelector((state) => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number)=> dispatch(addContact(name, number));\r\n       \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n \r\n  const handleChangeName = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  \r\n  const handleChangeNumber = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n  \r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normolizedName = name.toLowerCase();\r\n    \r\n    if (getItems.find((item) =>      \r\n      item.name.toLowerCase() === normolizedName\r\n    )) {\r\n        alert(`${name} is already in contacts`);\r\n      } else {\r\n       onSubmit({ name, number }); \r\n    };      \r\n    reset()\r\n  };\r\n  \r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n  \r\n  return (\r\n    <form\r\n      className={s.form}\r\n      onSubmit={handelSubmit}>\r\n      \r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      \r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChangeNumber}\r\n        />\r\n      </label>\r\n      <button className={s.form__button} type=\"submit\">Add contact</button>\r\n    </form>\r\n  )  \r\n};\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(phonebookActions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({ name, number, onDeleteContact }) => (\r\n     <li className={s.item}>\r\n        <p className={s.text}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button className={s.button} onClick = {onDeleteContact}>Delete</button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\nimport {deleteContact} from '../../redux/phonebook/phonebook-actions';\r\nimport s from './ContactsList.module.css'\r\nimport ContactsItem from '../ContactsItem';\r\n\r\n\r\nexport default function ContactsList () {\r\n    const contacts = useSelector((state) => {\r\n        const { filter, items } = state.contacts;\r\n        const normalizedFilter = filter.toLowerCase();\r\n        const visibleContacts = items.filter(item =>\r\n            item.name.toLowerCase().includes(normalizedFilter)\r\n        );       \r\n        return visibleContacts;\r\n    });\r\n    \r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n    <ul className={s.contacts__list}>\r\n        {contacts.map(({id, name, number} ) => (\r\n             <ContactsItem\r\n                key={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={()=> onDeleteContact(id)}\r\n            />\r\n        ))}\r\n    </ul>\r\n    )\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//     const { filter, items } = state.contacts;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     const visibleContacts = items.filter(item =>\r\n//         item.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n    \r\n//     return {\r\n//     contacts: visibleContacts,\r\n//     }\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//     onDeleteContact: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { connect } from 'react-redux';\r\nimport {changeFilter} from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter () {\r\n    const value = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n    const onChangeFilter = (event) => dispatch(changeFilter(event.target.value));\r\n\r\n    return (<label className={s.filter__label}>\r\n        Find contacts by name\r\n        <input className={s.filter__input} type=\"text\" value={value} onChange={onChangeFilter} placeholder=\"Jacob Mercer\" />\r\n    </label>)\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//     value: state.contacts.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: (event) => dispatch(phonebookActions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import '@pnotify/core/dist/BrightTheme.css';\r\nimport s from './App.module.css'\r\nimport Form from './components/Form';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\n// const useLocalStorage = (key, defaultValue) => {\r\n//    const [state, setState] = useState(() => {\r\n//        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\r\n//    });\r\n//     return [state, setState]\r\n// };\r\n\r\nexport default function App() {\r\n    return (\r\n      <div className={s.container}>\r\n        <h1>Phonebook</h1>\r\n        <Form/>\r\n        <h2>Contacts</h2>\r\n        <Filter/>\r\n        <ContactsList/>\r\n      </div>\r\n   );\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {addContact, deleteContact, changeFilter} from './phonebook-actions';\r\n// import types from \"./phonebook-types\";\r\n\r\nconst initilItems = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(initilItems, {\r\n    [addContact]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact]: (state, { payload }) => state.filter(({id}) => id !== payload),    \r\n});\r\n\r\nconst filter = createReducer('', {\r\n     [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n\r\n\r\n// const items = (state = initilItems, {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [payload, ...state];\r\n        \r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload);\r\n  \r\n//         default:    \r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload\r\n               \r\n//         default:\r\n//             return state;\r\n//     };   \r\n// };\r\n\r\n\r\n\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore, FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\n\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n}\r\n\r\nconst rootReduser = combineReducers({\r\n    contacts: persistReducer(persistConfig, phonebookReducer),\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReduser,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default {store, persistor};\r\n\r\n\r\n\r\n// const rootReduser = combineReducers({\r\n//     contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReduser, composeWithDevTools());\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2IXZD\",\"form__label\":\"Form_form__label__3-5hY\",\"form__input\":\"Form_form__input__QULgP\",\"form__button\":\"Form_form__button__1q11D\"};"],"sourceRoot":""}